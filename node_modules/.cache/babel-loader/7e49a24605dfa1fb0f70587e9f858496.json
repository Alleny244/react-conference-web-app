{"ast":null,"code":"var _jsxFileName = \"/home/championrunner/Documents/KonfHub/conference-web/src/App.js\";\nimport React, { useState } from 'react';\n/* core */\n\nimport Header from \"./components/Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\"; // performSearch = (query = 'camping') => {\n//   fetch(`https://api.unsplash.com/search/photos?page=3&query=${query}&client_id=${client_id}`)\n//     .then(response => response.json())\n//     .then(responseData => {\n//       this.setState({\n//         results: responseData.results,\n//         loading: false\n//       });\n//     })\n//     .catch(error => {\n//       console.log('Error fetching and parsing data', error);\n//     });\n// }\n// const repeat = () => {\n//   const [conference, setConference] = useState(conferences = []);\n//   fetch(\"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\")\n//     .then(results => {\n//       return results.json();\n//     })\n//     .then(data => {\n//       let conferences = data.results.map(conference => {\n//         return (\n//           <div>\n//             <div key={conference.results}>\n//               <h1 src={person.paid.confName} />\n//               {/* <h1>First Name: {person.name.first}</h1> */}\n//               {/* <h1>Gender: {person.gender}</h1> */}\n//               {/* <h1>Age: {person.dob.age}</h1> */}\n//             </div>\n//           </div>\n//         );\n//       });\n//       setConference(conferences);\n//     });\n// }\n\nconst App = () => {\n  // return (\n  //   <div className=\"App\">\n  //   </div>\n  // );\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      setMovies(jsonResponse.Search);\n      setLoading(false);\n    });\n  }, []);\n\n  const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      } else {\n        setErrorMessage(jsonResponse.Error);\n        setLoading(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    text: \"HOOKED\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App-intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Sharing a few of our favourite movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, loading && !errorMessage ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"loading...\") : errorMessage ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, errorMessage) : movies.map((movie, index) => /*#__PURE__*/React.createElement(Movie, {\n    key: `${index}-${movie.Title}`,\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/championrunner/Documents/KonfHub/conference-web/src/App.js"],"names":["React","useState","Header","Movie","Search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","MOVIE_API_URL","then","response","json","jsonResponse","search","searchValue","Response","Error","map","movie","index","Title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/* core */\nimport Header from \"./components/Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\n\n// performSearch = (query = 'camping') => {\n//   fetch(`https://api.unsplash.com/search/photos?page=3&query=${query}&client_id=${client_id}`)\n//     .then(response => response.json())\n//     .then(responseData => {\n//       this.setState({\n//         results: responseData.results,\n//         loading: false\n//       });\n//     })\n//     .catch(error => {\n//       console.log('Error fetching and parsing data', error);\n//     });\n// }\n\n\n// const repeat = () => {\n//   const [conference, setConference] = useState(conferences = []);\n//   fetch(\"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\")\n//     .then(results => {\n//       return results.json();\n//     })\n//     .then(data => {\n//       let conferences = data.results.map(conference => {\n//         return (\n//           <div>\n//             <div key={conference.results}>\n//               <h1 src={person.paid.confName} />\n//               {/* <h1>First Name: {person.name.first}</h1> */}\n//               {/* <h1>Gender: {person.gender}</h1> */}\n//               {/* <h1>Age: {person.dob.age}</h1> */}\n//             </div>\n//           </div>\n//         );\n//       });\n//       setConference(conferences);\n//     });\n// }\n\nconst App = () => {\n  // return (\n  //   <div className=\"App\">\n  //   </div>\n  // );\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      });\n  }, []);\n\n  const search = searchValue => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          setMovies(jsonResponse.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <span>loading...</span>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n              movies.map((movie, index) => (\n                <Movie key={`${index}-${movie.Title}`} movie={movie} />\n              ))\n            )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}