{"ast":null,"code":"var _jsxFileName = \"/home/championrunner/Documents/KonfHub/conference-web/src/App.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport Movie from \"./components/Movie\";\nimport spinner from \"./assets/spinner.gif\";\nimport Search from \"./components/Search\";\nimport { initialState, reducer } from \"./store/reducer\";\nimport axios from \"axios\";\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // const MOVIE_API_URL = \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get(MOVIE_API_URL).then(jsonResponse => {\n      console.log('jsonResponse.data.Search', jsonResponse.data.Search);\n      dispatch({\n        type: \"SEARCH_CONFERENCES_SUCCESS\",\n        payload: jsonResponse.data.Search\n      });\n    });\n  }, []); // you can add this to the onClick listener of the Header component\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_CONFERENCES_REQUEST\"\n    });\n    axios(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(jsonResponse => {\n      if (jsonResponse.data.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_CONFERENCES_SUCCESS\",\n          payload: jsonResponse.data.Search\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_CONFERENCES_FAILURE\",\n          error: jsonResponse.data.Error\n        });\n      }\n    });\n  };\n\n  const {\n    conferences,\n    errorMessage,\n    loading\n  } = state;\n  const retrievedMovies = loading && !errorMessage ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"spinner\",\n    src: spinner,\n    alt: \"Loading spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }) : errorMessage ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, errorMessage) : conferences.map((movie, index) => /*#__PURE__*/React.createElement(Movie, {\n    key: `${index}-${movie.Title}`,\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/championrunner/Documents/KonfHub/conference-web/src/App.js"],"names":["React","useReducer","useEffect","Movie","spinner","Search","initialState","reducer","axios","MOVIE_API_URL","App","state","dispatch","get","then","jsonResponse","console","log","data","type","payload","refreshPage","window","location","reload","search","searchValue","Response","error","Error","conferences","errorMessage","loading","retrievedMovies","map","movie","index","Title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,iBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG,gDAAtB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACM,OAAD,EAAUD,YAAV,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACK,GAAN,CAAUJ,aAAV,EAAyBK,IAAzB,CAA8BC,YAAY,IAAI;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,YAAY,CAACG,IAAb,CAAkBb,MAA1D;AACAO,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,4BADC;AAEPC,QAAAA,OAAO,EAAEL,YAAY,CAACG,IAAb,CAAkBb;AAFpB,OAAD,CAAR;AAID,KAND;AAOD,GARQ,EAQN,EARM,CAAT,CAHgB,CAahB;;AACA,QAAMgB,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAGC,WAAW,IAAI;AAC5Bd,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIAX,IAAAA,KAAK,CAAE,8BAA6BkB,WAAY,kBAA3C,CAAL,CAAmEZ,IAAnE,CACEC,YAAY,IAAI;AACd,UAAIA,YAAY,CAACG,IAAb,CAAkBS,QAAlB,KAA+B,MAAnC,EAA2C;AACzCf,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,4BADC;AAEPC,UAAAA,OAAO,EAAEL,YAAY,CAACG,IAAb,CAAkBb;AAFpB,SAAD,CAAR;AAID,OALD,MAKO;AACLO,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,4BADC;AAEPS,UAAAA,KAAK,EAAEb,YAAY,CAACG,IAAb,CAAkBW;AAFlB,SAAD,CAAR;AAID;AACF,KAbH;AAeD,GApBD;;AAsBA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAyCrB,KAA/C;AAEA,QAAMsB,eAAe,GACnBD,OAAO,IAAI,CAACD,YAAZ,gBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAE3B,OAA9B;AAAuC,IAAA,GAAG,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAEI2B,YAAY,gBACd;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,YAA/B,CADc,GAGVD,WAAW,CAACI,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBACd,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAG,GAAEA,KAAM,IAAGD,KAAK,CAACE,KAAM,EAApC;AAAuC,IAAA,KAAK,EAAEF,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANR;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CA/DD;;AAiEA,eAAezB,GAAf","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport Movie from \"./components/Movie\";\nimport spinner from \"./assets/spinner.gif\";\nimport Search from \"./components/Search\";\nimport { initialState, reducer } from \"./store/reducer\";\nimport axios from \"axios\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n// const MOVIE_API_URL = \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    axios.get(MOVIE_API_URL).then(jsonResponse => {\n      console.log('jsonResponse.data.Search', jsonResponse.data.Search);\n      dispatch({\n        type: \"SEARCH_CONFERENCES_SUCCESS\",\n        payload: jsonResponse.data.Search\n      });\n    });\n  }, []);\n\n  // you can add this to the onClick listener of the Header component\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_CONFERENCES_REQUEST\"\n    });\n\n    axios(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(\n      jsonResponse => {\n        if (jsonResponse.data.Response === \"True\") {\n          dispatch({\n            type: \"SEARCH_CONFERENCES_SUCCESS\",\n            payload: jsonResponse.data.Search\n          });\n        } else {\n          dispatch({\n            type: \"SEARCH_CONFERENCES_FAILURE\",\n            error: jsonResponse.data.Error\n          });\n        }\n      }\n    );\n  };\n\n  const { conferences, errorMessage, loading } = state;\n\n  const retrievedMovies =\n    loading && !errorMessage ? (\n      <img className=\"spinner\" src={spinner} alt=\"Loading spinner\" />\n    ) : errorMessage ? (\n      <div className=\"errorMessage\">{errorMessage}</div>\n    ) : (\n          conferences.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        );\n\n  return (\n    <div className=\"App\">\n      <div className=\"m-container\">\n        {/* <h1>Conference Hub</h1> */}\n        {/* <Search search={search} /> */}\n        {/* <p className=\"App-intro\">Sharing a few of our favourite movies</p> */}\n        {/* <div className=\"movies\">{retrievedMovies}</div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}