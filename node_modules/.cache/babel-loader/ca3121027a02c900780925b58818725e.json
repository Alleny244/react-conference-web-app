{"ast":null,"code":"var _jsxFileName = \"/home/championrunner/Documents/KonfHub/conference-web/src/App.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport Conference from \"./components/Conference\";\nimport spinner from \"./assets/spinner.gif\";\nimport Search from \"./components/Search\";\nimport { initialState, reducer } from \"./store/reducer\";\nimport axios from \"axios\";\nconst CONFERENCE_API_URL = \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences/?s=conf&s=aws&s=Developer&s=Conference\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get(CONFERENCE_API_URL).then(jsonResponse => {\n      console.log('jsonResponse.data.Search', jsonResponse.data.free);\n      dispatch({\n        type: \"SEARCH_CONFERENCES_SUCCESS\",\n        payload: jsonResponse.data.paid\n      });\n    });\n  }, []); // you can add this to the onClick listener of the Header component\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_CONFERENCES_REQUEST\"\n    });\n    axios(`https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences/?s=${searchValue}&s=${searchValue}&s=${searchValue}&s=${searchValue}`).then(jsonResponse => {\n      console.log('jsonResponse.data.Response', jsonResponse.data.display_paid);\n\n      if (jsonResponse.data.display_paid === \"1\") {\n        dispatch({\n          type: \"SEARCH_CONFERENCES_SUCCESS\",\n          payload: jsonResponse.data.paid\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_CONFERENCES_FAILURE\",\n          error: jsonResponse.data.Error\n        });\n      }\n    });\n  };\n\n  const {\n    conferences,\n    loading\n  } = state;\n  const retrievedConferences = loading ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"spinner\",\n    src: spinner,\n    alt: \"Loading spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }) : conferences.map((conference, index) => /*#__PURE__*/React.createElement(Conference, {\n    key: `${index}-${conference.confName}`,\n    conference: conference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Conference Hub\"), /*#__PURE__*/React.createElement(Search, {\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App-intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Conference list\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conferences\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, retrievedConferences)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/championrunner/Documents/KonfHub/conference-web/src/App.js"],"names":["React","useReducer","useEffect","Conference","spinner","Search","initialState","reducer","axios","CONFERENCE_API_URL","App","state","dispatch","get","then","jsonResponse","console","log","data","free","type","payload","paid","refreshPage","window","location","reload","search","searchValue","display_paid","error","Error","conferences","loading","retrievedConferences","map","conference","index","confName"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport Conference from \"./components/Conference\";\nimport spinner from \"./assets/spinner.gif\";\nimport Search from \"./components/Search\";\nimport { initialState, reducer } from \"./store/reducer\";\nimport axios from \"axios\";\n\nconst CONFERENCE_API_URL = \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences/?s=conf&s=aws&s=Developer&s=Conference\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    axios.get(CONFERENCE_API_URL).then(jsonResponse => {\n      console.log('jsonResponse.data.Search', jsonResponse.data.free);\n      dispatch({\n        type: \"SEARCH_CONFERENCES_SUCCESS\",\n        payload: jsonResponse.data.paid\n      });\n    });\n  }, []);\n\n  // you can add this to the onClick listener of the Header component\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_CONFERENCES_REQUEST\"\n    });\n\n    axios(`https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences/?s=${searchValue}&s=${searchValue}&s=${searchValue}&s=${searchValue}`).then(\n      jsonResponse => {\n        console.log('jsonResponse.data.Response', jsonResponse.data.display_paid);\n        if (jsonResponse.data.display_paid === \"1\") {\n          dispatch({\n            type: \"SEARCH_CONFERENCES_SUCCESS\",\n            payload: jsonResponse.data.paid\n          });\n        } else {\n          dispatch({\n            type: \"SEARCH_CONFERENCES_FAILURE\",\n            error: jsonResponse.data.Error\n          });\n        }\n      }\n    );\n  };\n\n  const { conferences, loading } = state;\n\n  const retrievedConferences =\n    loading ? (\n      <img className=\"spinner\" src={spinner} alt=\"Loading spinner\" />\n    ) : (\n        conferences.map((conference, index) => (\n          <Conference key={`${index}-${conference.confName}`} conference={conference} />\n        ))\n      );\n\n  return (\n    <div className=\"App\">\n      <div className=\"m-container\">\n        <h1>Conference Hub</h1>\n        <Search search={search} />\n        <p className=\"App-intro\">Conference list</p>\n        <div className=\"conferences\">{retrievedConferences}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}